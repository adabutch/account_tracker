version: '3'
services:
  # keep the containers running to allow for admin tasks (e.g. install modules)
  
  web:
    image: nginx:stable
    volumes:
      - .:/srv/account_tracker/
      - ./config/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./config/ssl:/etc/nginx/ssl 
    ports:
      # leave off '127.0.0.1' if you want to expose the service beyond localhost
      - 127.0.0.1:8001:80
      - 127.0.0.1:8002:443
    # if the container doesn't run, there may be a problem with your nginx.conf
    # `docker-compose log` may offer enough clues
    # entrypoint: ["tail", "-f", "/dev/null"]
      
  ui:
    image: node:12
    volumes:
      - .:/srv/account_tracker/
      - account_tracker_ui_modules:/srv/account_tracker/ui/node_modules
    working_dir: /srv/account_tracker/ui
    # command: npm run dev
    # keep the container running
    # then connect directly to run build interactively
    entrypoint: ["tail", "-f", "/dev/null"]
    
  api:
    image: python:3
    volumes:
      - .:/srv/account_tracker/
      #- account_tracker_api_modules:/srv/account_tracker/node_modules
    ports:
      - 127.0.0.1:8000:8000
      
    working_dir: /srv/account_tracker/api
    environment:
      - ACCOUNT_TRACKER_CONF=example.conf
    entrypoint: ["tail", "-f", "/dev/null"]

  # db:
  #   image: mongo:4.0-xenial
  #   restart: always
  #   #environment:
  #     #MONGO_INITDB_ROOT_USERNAME: root
  #     #MONGO_INITDB_ROOT_PASSWORD: example
  #   volumes:
  #     - ./db:/data/db
  #     # for importing database files
  #     - ./mongodump:/srv/mongodump
    
    
volumes:
  account_tracker_ui_modules:
    external: true

  # account_tracker_api_modules:
  #   external: true

